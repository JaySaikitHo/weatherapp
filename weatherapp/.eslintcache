[{"/home/jay/devpractice/weatherapp/weatherapp/src/weather.js":"1","/home/jay/devpractice/weatherapp/weatherapp/src/App.js":"2","/home/jay/devpractice/weatherapp/weatherapp/src/components/Temperature.js":"3","/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getforecast.js":"4","/home/jay/devpractice/weatherapp/weatherapp/src/index.js":"5","/home/jay/devpractice/weatherapp/weatherapp/src/components/Humidity.js":"6","/home/jay/devpractice/weatherapp/weatherapp/src/reportWebVitals.js":"7","/home/jay/devpractice/weatherapp/weatherapp/src/components/Windspeed.js":"8","/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getcurrentweather.js":"9"},{"size":3335,"mtime":1610936005641,"results":"10","hashOfConfig":"11"},{"size":212,"mtime":1610137380642,"results":"12","hashOfConfig":"11"},{"size":324,"mtime":1610559692713,"results":"13","hashOfConfig":"11"},{"size":610,"mtime":1611079460723,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1609186575551,"results":"15","hashOfConfig":"11"},{"size":300,"mtime":1610559692713,"results":"16","hashOfConfig":"11"},{"size":362,"mtime":1609186575551,"results":"17","hashOfConfig":"11"},{"size":308,"mtime":1610559692713,"results":"18","hashOfConfig":"11"},{"size":753,"mtime":1610933949115,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"15d14z1",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jay/devpractice/weatherapp/weatherapp/src/weather.js",["43","44"],"\nimport React, { useEffect, useState } from \"react\";\nimport '../node_modules/react-vis/dist/style.css';\nimport { XYPlot, LineSeries, HorizontalGridLines, VerticalGridLines, XAxis, YAxis } from 'react-vis';\n\nimport Getcurrentweather from './hooks/Getcurrentweather';\nimport Getforecast from './hooks/Getforecast';\nimport Temperature from './components/Temperature';\nimport Humidity from './components/Humidity';\nimport Windspeed from './components/Windspeed';\nconst get = require('lodash.get');\n\nexport default function Main() {\n\n  const [graph, setGraph] = useState(\n  [\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n    { x: 0, y: 0 },\n  ]\n);\n\n\n  let forecastArray = [];\n\n  const [city, setCity] = useState(\"\");\n  const [dailyForecast, setDailyForecast] = useState([]);\n\n  const onclick_setCity = function (event) {\n    setCity(event.target.value);\n\n  };\n\n\n\n\n  useEffect(() => {\n    const weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    function Getdata(city) {\n      //  console.log('getdata', city)\n\n      if (city) {\n        Getforecast(city)\n          .then(data => {\n            console.log(\"data from useeffect\", data);\n            if (data) {\n              console.log('graph', data.daily[0].dt);\n              var dailies = get(data, 'daily', []);\n              \n              for (var i = 0; i < 7; i++) {\n                dailies[i].x = weekdays[new Date(dailies[i].dt * 1000).getDay()] \n                dailies[i].y = get(dailies[i], 'temp.max', 0)\n              }\n\n              // dailies = dailies.map((day) => ({\n              //   x: weekdays[new Date(day.dt * 1000).getDay()],\n              //   y: get(day, 'temp.max', 0)\n              // }));\n\n              setGraph(dailies);\n            }\n          });\n      }\n\n    }\n\n    Getdata(city);\n  }, [city]);\n\n  /*\n  function getForecastTest(city ) {\n    return fetch('https://api.openweathermap.org/data/2.5/onecall?lat=49.2827&lon=-123.1207&exclude=current,minutely,hourly,alerts&units=metric&appid=9fc18a0269d603fe395f54a64d2f07ec')\n      .then(response => response.json())\n  }\n  */\n\n\n  console.log(\"dailyForecast\", dailyForecast);\n\n  const currentWeather = Getcurrentweather(city);\n  console.log(\"currentweather\", currentWeather);\n\n\n\n\n\n  return (\n    <div>\n      <h2>Choose a city</h2>\n      <select onChange={onclick_setCity}>\n        <option className=\"location_option\" value=\"location\">Choose location\n              </option>\n\n        <option value=\"Calgary\">\n          Calgary\n                </option>\n        <option value=\"Vancouver\">Vancouver</option>\n        <option value=\"Toronto\">Toronto</option>\n      </select>\n\n      <Temperature currentTemperature={currentWeather.temperature} />\n      <Windspeed currentWindspeed={currentWeather.windSpeed} />\n      <Humidity currentHumidity={currentWeather.humidity} />\n      <h2>7 day Forecast</h2>\n      <div className=\"graph\">\n        <XYPlot height={300} width={700} stroke=\"red\" xType=\"ordinal\" style ={{backgroundColor: \"lightgrey\"}}>\n          <LineSeries data={graph} />\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis title=\"Day\" />\n          <YAxis title=\"Temp degrees Celsius\" />\n        </XYPlot>\n      </div>\n    </div>\n  );\n}\n",["45","46"],"/home/jay/devpractice/weatherapp/weatherapp/src/App.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/components/Temperature.js",[],["47","48"],"/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getforecast.js",["49"],"/home/jay/devpractice/weatherapp/weatherapp/src/index.js",[],["50","51"],"/home/jay/devpractice/weatherapp/weatherapp/src/components/Humidity.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/reportWebVitals.js",[],["52","53"],"/home/jay/devpractice/weatherapp/weatherapp/src/components/Windspeed.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getcurrentweather.js",[],{"ruleId":"54","severity":1,"message":"55","line":29,"column":7,"nodeType":"56","messageId":"57","endLine":29,"endColumn":20},{"ruleId":"54","severity":1,"message":"58","line":32,"column":25,"nodeType":"56","messageId":"57","endLine":32,"endColumn":41},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"59","replacedBy":"63"},{"ruleId":"61","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":21,"endColumn":4},{"ruleId":"59","replacedBy":"69"},{"ruleId":"61","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},"no-unused-vars","'forecastArray' is assigned a value but never used.","Identifier","unusedVar","'setDailyForecast' is assigned a value but never used.","no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["73"],["74"],["73"],["74"],"no-global-assign","no-unsafe-negation"]