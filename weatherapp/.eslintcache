[{"/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getforecast.js":"1","/home/jay/devpractice/weatherapp/weatherapp/src/reportWebVitals.js":"2","/home/jay/devpractice/weatherapp/weatherapp/src/weather.js":"3","/home/jay/devpractice/weatherapp/weatherapp/src/App.js":"4","/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getcurrentweather.js":"5","/home/jay/devpractice/weatherapp/weatherapp/src/components/Humidity.js":"6","/home/jay/devpractice/weatherapp/weatherapp/src/components/Windspeed.js":"7","/home/jay/devpractice/weatherapp/weatherapp/src/components/Temperature.js":"8","/home/jay/devpractice/weatherapp/weatherapp/src/index.js":"9"},{"size":851,"mtime":1610565456461,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609186575551,"results":"12","hashOfConfig":"11"},{"size":1603,"mtime":1610564508997,"results":"13","hashOfConfig":"11"},{"size":212,"mtime":1610137380642,"results":"14","hashOfConfig":"11"},{"size":716,"mtime":1610559692717,"results":"15","hashOfConfig":"11"},{"size":300,"mtime":1610559692713,"results":"16","hashOfConfig":"11"},{"size":308,"mtime":1610559692713,"results":"17","hashOfConfig":"11"},{"size":324,"mtime":1610559692713,"results":"18","hashOfConfig":"11"},{"size":500,"mtime":1609186575551,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15d14z1",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getforecast.js",["42"],"/home/jay/devpractice/weatherapp/weatherapp/src/reportWebVitals.js",[],["43","44"],"/home/jay/devpractice/weatherapp/weatherapp/src/weather.js",["45"],"\nimport React, { useEffect, useState } from \"react\";\nimport Getcurrentweather from './hooks/Getcurrentweather';\nimport Getforecast from './hooks/Getforecast';\nimport Temperature from './components/Temperature';\nimport Humidity from './components/Humidity';\nimport Windspeed from './components/Windspeed';\n\n\nexport default function Main() {\n  \n  let forecastArray = [];\n  \n  const [city, setCity] = useState(\"\");\n  const [dailyForecast, setDailyForecast] = useState([])\n  \n  const onclick_setCity = function(event) {\n    setCity(event.target.value)\n    \n  }\n  \n  function fillArray (city) {\n    forecastArray.push(Getforecast(city))\n  }\n  \n  fillArray(city);\n  useEffect(()=> {\n    Promise.all(forecastArray)\n    .then((data) => {setDailyForecast(data[0].daily)})\n\n  },[city])\n  \n  console.log(\"dailyForecast\", dailyForecast)\n  \n  \n  const currentWeather = Getcurrentweather(city);\n  console.log(\"currentweather\",currentWeather)\n  \n  \n    \n  \n  \n  return (\n    <div>\n      <h2>Choose a city</h2>\n      <select onChange={onclick_setCity}>\n              <option className=\"location_option\" value=\"location\">Choose location\n              </option>\n\n                <option value=\"Calgary\">\n                Calgary\n                </option>\n                <option value=\"Vancouver\">Vancouver</option>\n                <option value=\"Toronto\">Toronto</option>\n              </select>\n      \n      <Temperature currentTemperature = {currentWeather.temperature} />\n      <Windspeed currentWindspeed = {currentWeather.windSpeed} />\n      <Humidity currentHumidity = {currentWeather.humidity} />\n    </div>\n  )\n}\n","/home/jay/devpractice/weatherapp/weatherapp/src/App.js",[],["46","47"],"/home/jay/devpractice/weatherapp/weatherapp/src/hooks/Getcurrentweather.js",["48"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nexport default function Getcurrentweather(city) {\n  const [temperature, setTemp] = useState(\"not available yet\");\n  const [windSpeed, setWindspeed] = useState(\"not available yet\");\n  const [humidity, setHumidity] = useState(\"not available yet\");\n \n  axios.get(\"/getweather\", {params: {city:city}} \n  )\n    \n  .then(response => {\n    \n    if(response.data.success === false) {\n      \n      return { temperature, windSpeed, humidity};\n    }\n    \n    setTemp(response.data.current.temperature);\n    setWindspeed(response.data.current.wind_speed);\n    setHumidity(response.data.current.humidity);\n  })\n  return { temperature, windSpeed, humidity};\n  \n}","/home/jay/devpractice/weatherapp/weatherapp/src/components/Humidity.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/components/Windspeed.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/components/Temperature.js",[],"/home/jay/devpractice/weatherapp/weatherapp/src/index.js",[],{"ruleId":"49","severity":1,"message":"50","line":5,"column":9,"nodeType":"51","messageId":"52","endLine":5,"endColumn":16},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":31,"column":5,"nodeType":"59","endLine":31,"endColumn":11,"suggestions":"60"},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","replacedBy":"62"},{"ruleId":"49","severity":1,"message":"63","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":13},"no-unused-vars","'api_key' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forecastArray'. Either include it or remove the dependency array.","ArrayExpression",["66"],["64"],["65"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [city, forecastArray]",{"range":"69","text":"70"},[768,774],"[city, forecastArray]"]